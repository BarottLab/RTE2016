MeanRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = mean)
MeanRTE$DLI <- MeanRTE$x * 0.0864
MeanDLI <- aggregate(MeanRTE$DLI, by = list(RTE$Site), FUN = mean)
View(MeanRTE)
MeanDLI <- MeanRTE %>%
group_by(Site) %>%
mutate(MeanDLI = mean(DLI))
View(MeanRTE)
MeanDLI <- MeanRTE %>%
group_by(Group.3) %>%
mutate(MeanDLI = mean(DLI))
View(MeanDLI)
MeanDLI <- MeanRTE %>%
group_by(Group.3) %>%
mutate(MeanDLI = mean(DLI)) %>%
ungroup()
View(MeanDLI)
View(MeanRTE)
MeanDLI <- aggreagate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = mean)
MeanDLI <- aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = mean)
View(MeanDLI)
MeanDLI <- cbind(aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = mean),
aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = sd))
12.26/11.32
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
View(MeanMaxRTE)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$DLI, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$DLI, by = MeanMaxRTE["Group.3"], FUN = sd))
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
View(MeanMaxRTE)
PAR <- read.csv("PAR.csv")
PAR$Date <- as.Date(PAR$Date, format = "%m/%d/%y")
RTE <- subset(PAR, Date <= "2017-02-16")
RTE <- subset(RTE, Rack != "F5")
MeanRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = mean)
MeanRTE$DLI <- MeanRTE$x * 0.0864
MeanDLI <- cbind(aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = mean),
aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = sd))
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
View(MeanDLI)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
PAR <- read.csv("PAR.csv")
PAR$Date <- as.Date(PAR$Date, format = "%m/%d/%y")
RTE <- subset(PAR, Date <= "2017-02-16")
RTE <- subset(RTE, Rack != "F5")
MeanRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = mean)
MeanRTE$DLI <- MeanRTE$x * 0.0864
MeanDLI <- cbind(aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = mean),
aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = sd))
View(MeanDLI)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
View(MeanMaxRTE)
MeanMaxRTE <- aggregate(MeanMaxRTE$x, by = list(MeanMaxRTE$Group.2), FUN = mean)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- aggregate(MeanMaxRTE$x, by = list(MeanMaxRTE$Group.2, MeanMaxRTE$Group.3), FUN = mean)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.2"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.2"], FUN = sd))
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
PAR <- read.csv("PAR.csv")
PAR$Date <- as.Date(PAR$Date, format = "%m/%d/%y")
RTE <- subset(PAR, Date <= "2017-02-16")
RTE <- subset(RTE, Rack != "F5")
MeanRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = mean)
MeanRTE$DLI <- MeanRTE$x * 0.0864
MeanDLI <- cbind(aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = mean),
aggregate(MeanRTE$DLI, by = MeanRTE["Group.3"], FUN = sd))
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
PAR <- read.csv("PAR.csv")
PAR$Date <- as.Date(PAR$Date, format = "%m/%d/%y")
RTE <- subset(PAR, Date <= "2017-02-16")
RTE <- subset(RTE, Rack != "F5")
MeanRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = mean)
MeanRTE$DLI <- MeanRTE$x * 0.0864
View(MeanRTE)
names(MeanRTE) <- c("Date", "Rack", "Site", "PAR", "DLI")
View(MeanRTE)
MeanDLI <- cbind(aggregate(MeanRTE$DLI, by = MeanRTE["Site"], FUN = mean),
aggregate(MeanRTE$DLI, by = MeanRTE["Site"], FUN = sd))
View(MeanDLI)
View(RTE)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
View(MeanMaxRTE)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
View(MeanDLI)
ci <- function(x) sd(x, na.rm = TRUE)/sqrt(length(x))*qt(0.975, length(x)-1)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
View(MeanMaxRTE)
ci <- function(x) sd(x, na.rm = TRUE)/sqrt(length(x))*qt(0.975, length(x)-1)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = sd))
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
View(MeanMaxRTE)
ci <- function(x) sd(x, na.rm = TRUE)/sqrt(length(x, na.rm = T))*qt(0.975, length(x)-1)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
ci <- function(x) sd(x, na.rm = TRUE)/sqrt(length(x))*qt(0.975, length(x)-1)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
View(MeanMaxRTE)
View(RTE)
ggplot(RTE, aes(x = Time, y = cal, group = Site)) +
geom_line()
ggplot(RTE, aes(x = Time, y = cal, group = Site)) +
stat_summary(geom = "line")
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = mean)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
View(MeanMaxRTE)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Time, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
View(MeanMaxRTE)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Date, RTE$Rack, RTE$Site), FUN = max)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = mean),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
View(MeanDLI)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Rack, RTE$Site, RTE$Time), FUN = mean)
View(MeanMaxRTE)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = max),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.3"], FUN = ci))
View(MeanMaxRTE)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Rack, RTE$Site, RTE$Time), FUN = mean)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.2"], FUN = max),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.2"], FUN = ci))
View(MeanMaxRTE)
t.test(MeanRTE$DLI ~ MeanRTE$Site)
View(MeanRTE)
MeanMaxRTE <- aggregate(RTE$cal, by = list(RTE$Rack, RTE$Site, RTE$Time), FUN = mean)
View(MeanMaxRTE)
t.test(MeanMaxRTE$x ~ MeanMaxRTE$Group.2)
MeanMaxRTE <- cbind(aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.2"], FUN = max),
aggregate(MeanMaxRTE$x, by = MeanMaxRTE["Group.2"], FUN = ci))
# Load necessary packages
library(readr)
library(lubridate)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(scales)
# Import data
rm(list = ls())
seaphox <- read_csv("Data/seaphox_final.csv")
CocoTemp <- read_csv("Data/Coco.csv")
MontyTemp <- read_csv("Data/Monty.csv")
### Format seaphox data
# Convert time to POSIXct format
seaphox$newTime <- as.POSIXct(seaphox$Time, format = "%H:%M")
# Group times by nearest 15-min interval
seaphox$Time.r <- lubridate::round_date(seaphox$newTime, "15 minutes")
# Convert date to Date format
seaphox$Date <- as.Date(seaphox$Date, format = "%m/%d/%y")
# Convert time format to H:M
seaphox$TimeFinal <- format(seaphox$Time.r, "%H:%M")
# Merge date and time
seaphox$dttm <- as.POSIXct(paste(seaphox$Date, seaphox$TimeFinal), format="%Y-%m-%d %H:%M")
# Change timezone
seaphox$dttm <- as.POSIXlt(seaphox$dttm, format = "%H:%M")
attr(seaphox$dttm, "tzone") <- "UTC"
seaphox$dttm <- as.POSIXct(seaphox$dttm)
seaphox$dttm <- format(seaphox$dttm, tz = "HST")
### Format CTD Temp Data
# Bind site data
CocoTemp$Site <- "Coco 4"
MontyTemp$Site <- "Monty 13"
Sites <- rbind(CocoTemp, MontyTemp)
# Convert time to POSIXct format
Sites$newTime <- paste(floor(Sites$Time), round((Sites$Time-floor(Sites$Time))*60), sep = ":")
Sites$newTime <- as.POSIXct(Sites$newTime, format = "%H:%M")
# Group times by nearest 15-min interval
Sites$Time.r <- lubridate::round_date(Sites$newTime, "15 minutes")
# Convert date to Date format
Sites$newDate <- as.Date(Sites$Day, origin = "2016-01-01")
# Convert time format to H:M
Sites$TimeFinal <- format(Sites$Time.r, "%H:%M")
# Merge date and time
Sites$dttm <- as.POSIXct(paste(Sites$newDate, Sites$TimeFinal), format="%Y-%m-%d %H:%M")
# Change timezone
Sites$dttm <- as.POSIXlt(Sites$dttm, format = "%H:%M")
attr(Sites$dttm, "tzone") <- "UTC"
Sites$dttm <- as.POSIXct(Sites$dttm)
Sites$dttm <- format(Sites$dttm, tz = "HST")
### Merge all data
# Add TempCTD to final seaphox data
Final <- merge(seaphox, Sites, by = "dttm", all = T)
# Remove unneccessary columns
Final <- Final[ , c(1:2, 5:8, 19)]
# Rename columns
names(Final) <- c("DTTM", "Site", "pH", "Temp", "Sal", "DO", "TempCTD")
# Convert DO units
Final$DO <- Final$DO/32*1000
# Trim by deployment period
Final <- subset(Final, DTTM < "2017-04-19")
# Sort
Final$DTTM <- as_datetime(Final$DTTM)
Final <- Final[(order(Final$Site)),]
# Assign group to continuous data
TimeDiff <- difftime(Final$DTTM, lag(Final$DTTM, default = Final$DTTM[1]), units = "days")
Final$grp <- cumsum(ifelse(TimeDiff>2,1,0))
### Average Day Calculations ###
# Make new time column
Final$DTTM <- as_datetime(Final$DTTM)
Final$Time <- format(Final$DTTM, "%H:%M")
# Make new date column
Final$Date <- as.Date(Final$DTTM)
Final$Site <- gsub("Monty 13", "Outer Lagoon", as.character(Final$Site))
Final$Site <- gsub("Coco 4", "Inner Lagoon", as.character(Final$Site))
# Subset by timepoint
T3 <- subset(Final, DTTM < "2016-12-02" & DTTM > "2016-08-25")
T6 <- subset(Final, DTTM < "2017-02-16" & DTTM > "2016-08-25")
setwd("~/Documents/Professional/GitHub/RTE2016")
# Load necessary packages
library(readr)
library(lubridate)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(scales)
# Import data
rm(list = ls())
seaphox <- read_csv("Data/seaphox_final.csv")
CocoTemp <- read_csv("Data/Coco.csv")
MontyTemp <- read_csv("Data/Monty.csv")
### Format seaphox data
# Convert time to POSIXct format
seaphox$newTime <- as.POSIXct(seaphox$Time, format = "%H:%M")
# Group times by nearest 15-min interval
seaphox$Time.r <- lubridate::round_date(seaphox$newTime, "15 minutes")
# Convert date to Date format
seaphox$Date <- as.Date(seaphox$Date, format = "%m/%d/%y")
# Convert time format to H:M
seaphox$TimeFinal <- format(seaphox$Time.r, "%H:%M")
# Merge date and time
seaphox$dttm <- as.POSIXct(paste(seaphox$Date, seaphox$TimeFinal), format="%Y-%m-%d %H:%M")
# Change timezone
seaphox$dttm <- as.POSIXlt(seaphox$dttm, format = "%H:%M")
attr(seaphox$dttm, "tzone") <- "UTC"
seaphox$dttm <- as.POSIXct(seaphox$dttm)
seaphox$dttm <- format(seaphox$dttm, tz = "HST")
### Format CTD Temp Data
# Bind site data
CocoTemp$Site <- "Coco 4"
MontyTemp$Site <- "Monty 13"
Sites <- rbind(CocoTemp, MontyTemp)
# Convert time to POSIXct format
Sites$newTime <- paste(floor(Sites$Time), round((Sites$Time-floor(Sites$Time))*60), sep = ":")
Sites$newTime <- as.POSIXct(Sites$newTime, format = "%H:%M")
# Group times by nearest 15-min interval
Sites$Time.r <- lubridate::round_date(Sites$newTime, "15 minutes")
# Convert date to Date format
Sites$newDate <- as.Date(Sites$Day, origin = "2016-01-01")
# Convert time format to H:M
Sites$TimeFinal <- format(Sites$Time.r, "%H:%M")
# Merge date and time
Sites$dttm <- as.POSIXct(paste(Sites$newDate, Sites$TimeFinal), format="%Y-%m-%d %H:%M")
# Change timezone
Sites$dttm <- as.POSIXlt(Sites$dttm, format = "%H:%M")
attr(Sites$dttm, "tzone") <- "UTC"
Sites$dttm <- as.POSIXct(Sites$dttm)
Sites$dttm <- format(Sites$dttm, tz = "HST")
### Merge all data
# Add TempCTD to final seaphox data
Final <- merge(seaphox, Sites, by = "dttm", all = T)
# Remove unneccessary columns
Final <- Final[ , c(1:2, 5:8, 19)]
# Rename columns
names(Final) <- c("DTTM", "Site", "pH", "Temp", "Sal", "DO", "TempCTD")
# Convert DO units
Final$DO <- Final$DO/32*1000
# Trim by deployment period
Final <- subset(Final, DTTM < "2017-04-19")
# Sort
Final$DTTM <- as_datetime(Final$DTTM)
Final <- Final[(order(Final$Site)),]
# Assign group to continuous data
TimeDiff <- difftime(Final$DTTM, lag(Final$DTTM, default = Final$DTTM[1]), units = "days")
Final$grp <- cumsum(ifelse(TimeDiff>2,1,0))
### Average Day Calculations ###
# Make new time column
Final$DTTM <- as_datetime(Final$DTTM)
Final$Time <- format(Final$DTTM, "%H:%M")
# Make new date column
Final$Date <- as.Date(Final$DTTM)
Final$Site <- gsub("Monty 13", "Outer Lagoon", as.character(Final$Site))
Final$Site <- gsub("Coco 4", "Inner Lagoon", as.character(Final$Site))
# Subset by timepoint
T3 <- subset(Final, DTTM < "2016-12-02" & DTTM > "2016-08-25")
T6 <- subset(Final, DTTM < "2017-02-16" & DTTM > "2016-08-25")
View(T6)
sem <- function(x) sd(x, na.rm = TRUE)/sqrt(length(x))
ci <- function(x) sd(x, na.rm = TRUE)/sqrt(length(x))*qt(0.975, length(x)-1)
range <- function(x) max(x, na.rm = T)-min(x, na.rm = T)
View(T6)
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$pH, by = list(T6Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$TempCTD, by = list(T6Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$TempCTD, by = list(T6Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$Sal, by = list(T6Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$Sal, by = list(T6Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$DO, by = list(T6Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$DO, by = list(T6Site, T6$Date), FUN = sd, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:2, 4, 6, 8, 10, 12, 14, 16)]
names(SiteMeans) <- c("Site", "pH", "pHSD", "Temp", "TempSD", "Sal", "SalSD", "DO", "DOSD")
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:2, 4, 6, 8, 10, 12, 14, 16)]
names(SiteMeans) <- c("Site", "pH", "pHSD", "Temp", "TempSD", "Sal", "SalSD", "DO", "DOSD")
View(SiteMeans)
names(SiteMeans) <- c("Site", "Date", "pH", "pHSD", "Temp", "TempSD", "Sal", "SalSD", "DO", "DOSD")
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T), aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12, 15, 18, 21, 24)]
names(SiteMeans) <- c("Site", "Date", "pH", "pHSD", "Temp", "TempSD", "Sal", "SalSD", "DO", "DOSD")
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
t.test(SiteMeans$pH ~ SiteMeans$Site)
t.test(SiteMeans$Temp ~ SiteMeans$Site)
t.test(SiteMeans$Sal ~ SiteMeans$Site)
t.test(SiteMeans$DO ~ SiteMeans$Site)
t.test(SiteMeans$Temp ~ SiteMeans$Site)
t.test(SiteMeans$pH ~ SiteMeans$Site) # p =
t.test(SiteMeans$Temp ~ SiteMeans$Site) # p =
t.test(SiteMeans$Sal ~ SiteMeans$Site)
t.test(SiteMeans$DO ~ SiteMeans$Site)
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd))
View(SiteMeans)
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
View(SiteMeans)
SiteMeans[is.nan(SiteMeans)] <- 0
SiteMeans[is.nan(SiteMeans)]<-0
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-0
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd))
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-0
SiteMeans$Sal[is.nan(SiteMeans$Sal)]<-0
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd))
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-"NA"
SiteMeans$Sal[is.nan(SiteMeans$Sal)]<-"NA"
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd))
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-NA
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-NA
SiteMeans$Sal[is.nan(SiteMeans$Sal)]<-NA
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd))
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
SiteMeans[is.nan(SiteMeans)] <- NA
### Summary Stats ###
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
str(SiteMeans)
SiteMeans[is.nan(as.data.frame(SiteMeans))] <- NA
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-NA
SiteMeans$Sal[is.nan(SiteMeans$Sal)]<-NA
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd))
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd, na.rm = T),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd, na.rm = T),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd, na.rm = T),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd), na.rm = T)
SiteMeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$TempCTD, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = mean, na.rm = T))
SiteMeans <- SiteMeans[ , c(1:3, 6, 9, 12)]
names(SiteMeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
SiteMeans$Temp[is.nan(SiteMeans$Temp)]<-NA
SiteMeans$Sal[is.nan(SiteMeans$Sal)]<-NA
SiteMeans <- cbind(aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$pH, by = SiteMeans["Site"], FUN = sd, na.rm = T),
aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$Temp, by = SiteMeans["Site"], FUN = sd, na.rm = T),
aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$Sal, by = SiteMeans["Site"], FUN = sd, na.rm = T),
aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = mean, na.rm = T), aggregate(SiteMeans$DO, by = SiteMeans["Site"], FUN = sd), na.rm = T)
SiteRanges <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = range), aggregate(T6$pH, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$Temp, by = list(T6$Site, T6$Date), FUN = range), aggregate(T6$Temp, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = range), aggregate(T6$Sal, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = range), aggregate(T6$DO, by = list(T6$Site, T6$Date), FUN = sd, na.rm = T))
SiteRanges <- SiteRanges[ , c(1:3,6,9,12,15,18,21,24)]
names(SiteRanges) <- c("Site", "Date", "pH", "pHSD", "Temp", "TempSD", "Sal", "SalSD", "DO", "DOSD")
MeanRanges <- cbind(aggregate(SiteRanges$pH, by = list(SiteRanges$Site), FUN = mean, na.rm = T), aggregate(SiteRanges$pHSD, by = list(SiteRanges$Site), FUN = mean, na.rm = T),
aggregate(SiteRanges$Temp, by = list(SiteRanges$Site), FUN = mean, na.rm = T), aggregate(SiteRanges$TempSD, by = list(SiteRanges$Site), FUN = mean, na.rm = T),
aggregate(SiteRanges$Sal, by = list(SiteRanges$Site), FUN = mean, na.rm = T), aggregate(SiteRanges$SalSD, by = list(SiteRanges$Site), FUN = mean, na.rm = T),
aggregate(SiteRanges$DO, by = list(SiteRanges$Site), FUN = mean, na.rm = T), aggregate(SiteRanges$DOSD, by = list(SiteRanges$Site), FUN = mean, na.rm = T))
MeanRanges <- MeanRanges[,c(1:2,4,6,8,10,12,14,16)]
names(MeanRanges) <- c("Site", "pH", "pHSD", "Temp", "TempSD", "Sal", "SalSD", "DO", "DOSD")
View(MeanRanges)
View(T6)
Sitemeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Time), FUN = mean),
aggregate(T6$Temp, by = list(T6$Site, T6$Time), FUN = mean),
aggregate(T6$Sal, by = list(T6$Site, T6$Time), FUN = mean),
aggregate(T6$DO, by = list(T6$Site, T6$Time), FUN = mean))
names(Sitemeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
View(Sitemeans)
Sitemeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Time), FUN = mean),
aggregate(T6$Temp, by = list(T6$Site, T6$Time), FUN = mean),
aggregate(T6$Sal, by = list(T6$Site, T6$Time), FUN = mean),
aggregate(T6$DO, by = list(T6$Site, T6$Time), FUN = mean))
Sitemeans <- Sitemeans[ , c(1:3,6,9,12)]
Sitemeans <- cbind(aggregate(T6$pH, by = list(T6$Site, T6$Time), FUN = mean, na.rm = T),
aggregate(T6$Temp, by = list(T6$Site, T6$Time), FUN = mean, na.rm = T),
aggregate(T6$Sal, by = list(T6$Site, T6$Time), FUN = mean, na.rm = T),
aggregate(T6$DO, by = list(T6$Site, T6$Time), FUN = mean, na.rm = T))
Sitemeans <- Sitemeans[ , c(1:3,6,9,12)]
names(Sitemeans) <- c("Site", "Date", "pH", "Temp", "Sal", "DO")
t.test(Sitemeans$pH ~ Sitemeans$Site)
t.test(Sitemeans$Temp ~ Sitemeans$Site)
t.test(Sitemeans$Sal ~ Sitemeans$Site)
t.test(Sitemeans$DO ~ Sitemeans$Site)
siteranges <- cbind(aggregate(Sitemeans$pH, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$pH, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$Temp, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$Temp, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$Sal, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$Sal, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$DO, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$DO, by = Sitemeans["Site"], FUN = sd),)
siteranges <- cbind(aggregate(Sitemeans$pH, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$pH, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$Temp, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$Temp, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$Sal, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$Sal, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$DO, by = Sitemeans["Site"], FUN = max), aggregate(Sitemeans$DO, by = Sitemeans["Site"], FUN = sd))
View(siteranges)
siteranges <- cbind(aggregate(Sitemeans$pH, by = Sitemeans["Site"], FUN = range), aggregate(Sitemeans$pH, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$Temp, by = Sitemeans["Site"], FUN = range), aggregate(Sitemeans$Temp, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$Sal, by = Sitemeans["Site"], FUN = range), aggregate(Sitemeans$Sal, by = Sitemeans["Site"], FUN = sd),
aggregate(Sitemeans$DO, by = Sitemeans["Site"], FUN = range), aggregate(Sitemeans$DO, by = Sitemeans["Site"], FUN = sd))
